name: Release Pipeline

on:
  release:
    types:
      - created

jobs:
  release:
    name: Tag and Push Docker Image on Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build an image from Dockerfile
        run: docker build -t docker.io/bsdemon/tel-app:${{ github.event.release.tag_name }} -f docker/Dockerfile .

      - name: Login to Docker Hub
        if: success()
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image with release tag
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: docker.io/bsdemon/tel-app:${{ github.event.release.tag_name }}
          file: ./docker/Dockerfile

      - name: Push changes
        if: success()
        run: |
          # Configure git
          git config --global user.email "bsdemon@gmai.com"
          git config --global user.name "GitHub Actions"

          # Create or switch to 'master' branch
          git checkout master
          git pull

          # Update version.h with the current run number
          sed "s/{{ github.event.release.tag_name }}/${{ github.event.release.tag_name }}/g" release/deploy.templ > release/deployment.yaml
          # Commit and push
          git add ,
          git commit -m "Updated release version for deploy ${{ github.event.release.tag_name }}"
          git push origin master
