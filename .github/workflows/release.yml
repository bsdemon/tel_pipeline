name: Release Pipeline

on:
  release:
    types:
      - created

jobs:
  release:
    name: Tag and Push Docker Image on Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Make sure we fetch all refs/branches/tags
          fetch-depth: 0
      - name: debug
        run : |
          echo "Tag name: ${{ github.event.release.tag_name }}"
          echo "Branch name: ${{ github.ref }}"
          echo "Should be master"



      - name: Git release tag on master
        if: success() && contains(github.event.release.tag_name, 'release')
        run: |
          # Configure git
          git config user.email "bsdemon@gmai.com"
          git config user.name "GitHub Actions"
          echo "Tag name: ${{ github.event.release.tag_name }}"
          echo "Branch name: ${{ github.ref }}"
          echo "Should be master"

          # # Switch to 'master' and pull the latest
          # git checkout master
          # git pull

          # # Update deployment.yaml using sed
          # sed "s/{{ github.event.release.tag_name }}/${{ github.event.release.tag_name }}/g" release/deploy.templ > release/deployment.yaml

          # # Commit and push
          # git add .
          # git commit -m "Updated release version for deploy ${{ github.event.release.tag_name }}"
          # git push origin master

      # If the tag is NOT on master, just run 'ls'
      - name: Git release any tag on develop
        if: success() && contains(github.event.release.tag_name, 'test')
        run: |
          # Configure git
          git config user.email "bsdemon@gmai.com"
          git config user.name "GitHub Actions"
          echo "Tag name: ${{ github.event.release.tag_name }}"
          echo "Branch name: ${{ github.ref }}"
          echo "Should be develop"

          # # Switch to 'develop' and pull the latest
          # git checkout develop
          # git pull

          # # Update deployment.yaml using sed
          # sed "s/{{ github.event.release.tag_name }}/${{ github.event.release.tag_name }}/g" dev/deploy.templ > dev/deployment.yaml

          # # Commit and push
          # git add .
          # git commit -m "Updated release version for deploy ${{ github.event.release.tag_name }}"
          # git push origin develop
